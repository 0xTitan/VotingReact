{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Account/AccoutInfo.jsx","components/Worflow/Workflow.jsx","components/EventDisplayer/EventDisplayer.jsx","components/NavBar/Navbar.jsx","components/VoterRegistration/VoterRegistration.jsx","components/ProposalRegistration/ProposalRegistration.jsx","components/ProposalItem/ProposalItem.jsx","components/ProposalList/ProposalList.jsx","components/VoteResult/VoteResult.jsx","components/VoterInfo/VoterInfo.jsx","components/Home/Home.jsx","components/Events/Events.jsx","components/TransferOwnerShip/TransferOnwerShip.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","getBalance","currentBalance","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","e","forEach","window","ethereum","on","removeListener","Provider","value","useEth","useContext","AccountInfo","handleOwnerCheck","handleVoterRegisteredCheck","handleHasVotedCheck","handleProposalIfVotedFor","handleWorkflowStatusCheck","useState","balance","setBalance","setAddress","network","setNetwork","setWorkflowStatus","valueWei","valueEth","utils","fromWei","Number","toFixed","getCurrentAddress","addr","substring","length","getNetwork","isOwner","methods","owner","call","from","getCurrentWorkflowAndVoterRegistered","workflowStatus","isRegistered","getVoter","hasVoted","votedProposalId","className","Worflow","showEvent","read","checkStatus","status","startProposalsRegistering","send","transact","WorkflowStatusChange","returnValues","newStatus","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","disabled","onClick","EventDisplayer","raisedEvent","interval","setInterval","clearInterval","Navbar","displaySubNav","setDisplaySubNav","hideSubNav","to","onMouseEnter","style","visibility","VoterRegistration","voterAddress","valid","voterAddressList","setVoterAddressList","handleAddVoter","handleRegisterVoters","index","addVoter","VoterRegistered","map","currentVoter","name","id","placeholder","onChange","target","listVoter","handleAddressChange","addressLength","ProposalRegistration","proposal","registered","proposalList","setProposalList","handleAddProposal","handleRegisterProposals","prop","addProposal","ProposalRegistered","proposalId","listProposal","currentProposal","ProposalItem","proposalIdVotedFor","setData","voteId","setVoteId","retrievePropName","idProp","getOneProposal","description","voteCount","handleVote","setVote","transac","Voted","voter","ProposalList","pastEvents","setPastEvents","loading","fetchData","getProposalList","optionsPast","filter","fromBlock","toBlock","getPastEvents","event","VoteResult","winingProposal","setWinningProposal","getWinner","winningProposalId","VoterInfo","setVoter","addressValid","setAddressValid","setProposal","answer","setAnswer","checkVoterInfo","voterInfo","Home","isRegister","currentWorflow","Events","workflowEvents","setWorkflowEvents","proposalEvents","setProposalEvents","voterEvents","setVoterEvents","voteEvents","setVoteEvents","optionsNew","log","watchEvents","listenProposal","listenWorkflowStatus","listenNewWorkflowStatus","listenVoter","listenVote","oldEvents","current","newEvent","currentEvent","TransferOnwerShip","newOwner","setNewOwner","setValid","navigate","useNavigate","handleOwnerRegistration","transferOwnership","handleOwnerChange","App","setOwner","setRegistered","setHasVoted","setProposalIfVotedFor","setCurrentWorflow","SetRaisedEvent","voted","propIdVotedFor","path","element","replace","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a24beceb.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(async (artifact) => {\n    if (artifact) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      const currentBalance = await web3.eth.getBalance(accounts[0]);\n\n      const networkID = await web3.eth.net.getId();\n      const { abi } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n      dispatch({\n        type: actions.init,\n        data: { artifact, web3, accounts, networkID, contract, currentBalance },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\", \"connect\", \"disconnect\"];\n    const handleChange = (e) => {\n      if (e == \"disconnect\") {\n        state.artifact = null;\n        init(state.artifact);\n      }\n      {\n        if (!state.artifact) {\n          const artifact = require(\"../../contracts/Voting.json\");\n          init(artifact);\n        } else {\n          init(state.artifact);\n        }\n      }\n    };\n\n    events.forEach((e) => {\n      window.ethereum.on(e, () => handleChange(e));\n    });\n    return () => {\n      events.forEach((e) => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./AccountInfo.css\";\n\nfunction AccountInfo({\n  handleOwnerCheck,\n  handleVoterRegisteredCheck,\n  handleHasVotedCheck,\n  handleProposalIfVotedFor,\n  handleWorkflowStatusCheck,\n}) {\n  const {\n    state: { accounts, networkID, web3, contract },\n  } = useEth();\n\n  const [balance, setBalance] = useState(0);\n  const [address, setAddress] = useState(\"\");\n  const [network, setNetwork] = useState(\"\");\n  const [workflowStatus, setWorkflowStatus] = useState(0);\n\n  const getBalance = async () => {\n    // const value = contract\n    //   ? await contract.methods.winningProposalID().call({ from: accounts[0] })\n    //   : -1;\n\n    const valueWei = web3 ? await web3.eth.getBalance(accounts[0]) : 0;\n    let valueEth = web3 ? web3.utils.fromWei(valueWei, \"ether\") : 0;\n    valueEth = Number(valueEth).toFixed(3);\n    setBalance(valueEth + \" ETH\");\n  };\n\n  const getCurrentAddress = async () => {\n    if (accounts) {\n      const addr =\n        accounts[0].substring(0, 7) +\n        \"...\" +\n        accounts[0].substring(accounts[0].length - 4, accounts[0].length);\n      setAddress(addr);\n    }\n  };\n\n  const getNetwork = async () => {\n    switch (networkID) {\n      case 1:\n        setNetwork(\"Ethereum\");\n        break;\n      case 3:\n        setNetwork(\"Ropsten\");\n        break;\n      case 4:\n        setNetwork(\"Rinkeby\");\n        break;\n      case 5:\n        setNetwork(\"Goerli\");\n        break;\n      default:\n        setNetwork(\"local - \" + networkID);\n    }\n  };\n\n  const isOwner = async () => {\n    const value = contract\n      ? await contract.methods.owner().call({ from: accounts[0] })\n      : -1;\n    if (value === accounts[0]) {\n      handleOwnerCheck(true);\n    } else {\n      handleOwnerCheck(false);\n    }\n  };\n\n  const getCurrentWorkflowAndVoterRegistered = async () => {\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n    if (value > 0) {\n      isRegistered();\n    }\n  };\n\n  const isRegistered = async () => {\n    try {\n      const value = contract\n        ? await contract.methods\n            .getVoter(accounts[0])\n            .call({ from: accounts[0] })\n        : null;\n      if (value.isRegistered) {\n        handleVoterRegisteredCheck(true);\n      } else {\n        handleVoterRegisteredCheck(false);\n      }\n      if (value.hasVoted) {\n        handleHasVotedCheck(true);\n      } else {\n        handleHasVotedCheck(false);\n      }\n      if (value.votedProposalId >= 0 && value.hasVoted) {\n        handleProposalIfVotedFor(value.votedProposalId);\n      } else {\n        handleProposalIfVotedFor(-1);\n      }\n    } catch (err) {\n      handleVoterRegisteredCheck(false);\n      handleHasVotedCheck(false);\n      handleProposalIfVotedFor(-1);\n    }\n  };\n\n  useEffect(() => {\n    if (web3) {\n      getCurrentAddress();\n      getBalance();\n      getNetwork();\n      isOwner();\n      getCurrentWorkflowAndVoterRegistered();\n    }\n  }, [web3, accounts, address, handleWorkflowStatusCheck]);\n\n  return (\n    <div>\n      {address && (\n        <div className=\"class-accountInfo\">\n          <p className=\"class-itemAccountInfo\">{address}</p>\n          <p className=\"class-itemAccountInfo\">{balance}</p>\n          <p className=\"class-itemAccountInfo\">{network}</p>\n        </div>\n      )}\n      {!address && (\n        <div className=\"class-accountInfo\">\n          <p className=\"class-itemAccountInfo\">Not connected</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { useState, useEffect, useCallback } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./Workflow.css\";\n\nfunction Worflow({ handleWorkflowStatusCheck, showEvent }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n  const [workflowStatus, setWorkflowStatus] = useState(0);\n\n  useEffect(() => {\n    if (accounts) {\n      read();\n    }\n  }, [accounts]);\n\n  const read = useCallback(async () => {\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n  }, [contract]);\n\n  const checkStatus = (status) => {\n    return status - 1 == workflowStatus;\n  };\n\n  const startProposalsRegistering = async (e) => {\n    const transact = await contract.methods\n      .startProposalsRegistering()\n      .send({ from: accounts[0] });\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n    //get event from transaction.0\n    showEvent(\n      \"Workflow updated to  :\" +\n      transact.events.WorkflowStatusChange.returnValues.newStatus\n    );\n  };\n\n  const endProposalsRegistering = async (e) => {\n    const transact = await contract.methods\n      .endProposalsRegistering()\n      .send({ from: accounts[0] });\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n    //get event from transaction.0\n    showEvent(\n      \"Workflow updated to  :\" +\n      transact.events.WorkflowStatusChange.returnValues.newStatus\n    );\n  };\n\n  const startVotingSession = async (e) => {\n    const transact = await contract.methods\n      .startVotingSession()\n      .send({ from: accounts[0] });\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n    //get event from transaction.0\n    showEvent(\n      \"Workflow updated to  :\" +\n      transact.events.WorkflowStatusChange.returnValues.newStatus\n    );\n  };\n\n  const endVotingSession = async (e) => {\n    const transact = await contract.methods\n      .endVotingSession()\n      .send({ from: accounts[0] });\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n    //get event from transaction.0\n    showEvent(\n      \"Workflow updated to  :\" +\n      transact.events.WorkflowStatusChange.returnValues.newStatus\n    );\n  };\n\n  const tallyVotes = async (e) => {\n    const transact = await contract.methods\n      .tallyVotes()\n      .send({ from: accounts[0] });\n    const value = await contract.methods\n      .workflowStatus()\n      .call({ from: accounts[0] });\n    setWorkflowStatus(value);\n    handleWorkflowStatusCheck(value);\n\n    showEvent(\n      \"Workflow updated to  :\" +\n      transact.events.WorkflowStatusChange.returnValues.newStatus\n    );\n  };\n\n  return (\n    <div className=\"workflow-container\">\n      <span className=\"admin-instruction\">Workflow management</span>\n      <div className=\"workflow-actions\">\n        <button\n          className=\"worflow-button\"\n          disabled={!checkStatus(1)}\n          onClick={startProposalsRegistering}\n        >\n          Start proposal registration\n        </button>\n        <button\n          className=\"worflow-button\"\n          disabled={!checkStatus(2)}\n          onClick={endProposalsRegistering}\n        >\n          End proposal registration\n        </button>\n        <button\n          className=\"worflow-button\"\n          disabled={!checkStatus(3)}\n          onClick={startVotingSession}\n        >\n          Start voting session\n        </button>\n        <button\n          className=\"worflow-button\"\n          disabled={!checkStatus(4)}\n          onClick={endVotingSession}\n        >\n          End voting session\n        </button>\n        <button\n          className=\"worflow-button\"\n          disabled={!checkStatus(5)}\n          onClick={tallyVotes}\n        >\n          Tally vote\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Worflow;\n","import { useState, useEffect } from \"react\";\nimport \"./EventDisplayer.css\";\n\nfunction EventDisplayer({ raisedEvent, showEvent }) {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (raisedEvent && raisedEvent.length > 0) {\n        showEvent(\"\");\n      }\n    }, 3000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [raisedEvent, showEvent]);\n\n  return (\n    <div>\n      {raisedEvent.length > 0 && (\n        <div className=\"eventDisplayer-container\">\n          <span>{raisedEvent}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EventDisplayer;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const [displaySubNav, setDisplaySubNav] = useState(false);\n\n  const showSubNav = () => {\n    setDisplaySubNav(true);\n  };\n\n  const hideSubNav = () => {\n    setDisplaySubNav(false);\n  };\n\n  return (\n    <nav>\n      <div className=\"navbar\">\n        <div className=\"navbar-menu\">\n          <Link\n            to=\"/VotingReact\"\n            className=\"menu-bar\"\n            onMouseEnter={hideSubNav}\n          >\n            Home\n          </Link>\n          <Link\n            to=\"/VotingReact/transferOwner\"\n            className=\"menu-bar\"\n            onMouseEnter={hideSubNav}\n          >\n            Transfer Owner\n          </Link>\n          <Link\n            to=\"/VotingReact/workflow\"\n            className=\"menu-bar\"\n            onMouseEnter={hideSubNav}\n          >\n            Workflow\n          </Link>\n          <Link to=\"#\" className=\"menu-bar-events\" onMouseEnter={showSubNav}>\n            Events\n          </Link>\n        </div>\n        <div\n          className=\"subnav-content\"\n          style={{ visibility: displaySubNav ? \"visible\" : \"hidden\" }}\n        >\n          <Link to=\"/VotingReact/event/voter\" className=\"menu-bar\">\n            {\" \"}\n            Voter registration\n          </Link>\n          <Link to=\"/VotingReact/event/workflow\" className=\"menu-bar\">\n            {\" \"}\n            Workflow status\n          </Link>\n          <Link to=\"/VotingReact/event/proposal\" className=\"menu-bar\">\n            {\" \"}\n            Proposal registration\n          </Link>\n\n          <Link to=\"/VotingReact/event/vote\" className=\"menu-bar\">\n            {\" \"}\n            Vote\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./VoterRegistration.css\";\n\nfunction VoterRegistration({ showEvent }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n  const [voterAddressList, setVoterAddressList] = useState([\n    { voterAddress: \"\", valid: 0 },\n  ]);\n\n  const handleAddVoter = () => {\n    setVoterAddressList([...voterAddressList, { voterAddress: \"\", valid: 0 }]);\n  };\n\n  const handleAddressChange = (e, index) => {\n    const { name, value } = e.target;\n    const listVoter = [...voterAddressList];\n    listVoter[index][name] = value;\n    if (value.length === 42) {\n      listVoter[index][\"valid\"] = 1;\n    } else {\n      listVoter[index][\"valid\"] = 0;\n    }\n    setVoterAddressList(listVoter);\n  };\n\n  const handleRegisterVoters = async (index) => {\n    const transact = await contract.methods\n      .addVoter(voterAddressList[index].voterAddress)\n      .send({ from: accounts[0] });\n    showEvent(\n      \"Voter added  :\" +\n        transact.events.VoterRegistered.returnValues.voterAddress\n    );\n  };\n\n  const checkAddressLength = (addressLength) => {\n    return addressLength == 42;\n  };\n\n  return (\n    <div className=\"voterRegistration-main\">\n      <span className=\"admin-instruction\">\n        Admin please proceed with voter address registration before moving to\n        next phase\n      </span>\n      {voterAddressList.map((currentVoter, index) => (\n        <div key={index} className=\"voterRegistration-operation\">\n          <div className=\"voterRegistration-add\">\n            <div className=\"voterRegistration-input\">\n              <input\n                className=\"voterRegistration-inputTxt\"\n                name=\"voterAddress\"\n                type=\"text\"\n                id=\"voterAddress\"\n                placeholder=\"Enter address\"\n                value={currentVoter.voterAddress}\n                onChange={(e) => handleAddressChange(e, index)}\n              ></input>\n              {currentVoter.valid === 0 &&\n                currentVoter.voterAddress.length > 0 && (\n                  <div className=\"voterRegistration-alert\">\n                    <p>!</p>\n                  </div>\n                )}\n              <button\n                type=\"button\"\n                className=\"registerVoter-button\"\n                onClick={() => handleRegisterVoters(index)}\n                disabled={!checkAddressLength(currentVoter.voterAddress.length)}\n              >\n                <span>Register address to contract</span>\n              </button>\n\n              {voterAddressList.length - 1 === index &&\n                voterAddressList.length < 100 && (\n                  <button\n                    type=\"button\"\n                    className=\"addVoter-button\"\n                    onClick={handleAddVoter}\n                  >\n                    <span>Add a new voter address</span>\n                  </button>\n                )}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default VoterRegistration;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./ProposalRegistration.css\";\n\nfunction ProposalRegistration({ showEvent }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n\n  const [proposalList, setProposalList] = useState([\n    { proposal: \"\", registered: 0 },\n  ]);\n\n  const handleAddProposal = () => {\n    setProposalList([...proposalList, { proposal: \"\", registered: 0 }]);\n  };\n\n  useEffect(() => {\n    setProposalList([{ proposal: \"\", registered: 0 }]);\n  }, [accounts]);\n\n  //   const handleRemoveProposal = (index) => {\n  //     console.log(\"RemoveProposal\");\n  //     const listProposal = [...proposalList];\n  //     console.log(index);\n  //     console.log(listProposal);\n  //     listProposal.splice(index, 1);\n  //     setProposalList(listProposal);\n  //   };\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const listProposal = [...proposalList];\n    listProposal[index][name] = value;\n    setProposalList(listProposal);\n  };\n\n  const handleRegisterProposals = async (index) => {\n    const prop = proposalList[index].proposal;\n    const transact = await contract.methods\n      .addProposal(prop)\n      .send({ from: accounts[0] });\n    showEvent(\n      \"Proposal added  : \" +\n        transact.events.ProposalRegistered.returnValues.proposalId\n    );\n\n    const listProposal = [...proposalList];\n    listProposal[index][\"registered\"] = 1;\n    setProposalList(listProposal);\n  };\n\n  return (\n    <div className=\"proposalRegistration-main\">\n      <span className=\"admin-instruction\">\n        Please proceed with proposal registration\n      </span>\n      {proposalList.map((currentProposal, index) => (\n        <div key={index} className=\"proposalRegistration-operation\">\n          <div className=\"proposalRegistration-add\">\n            <div className=\"proposalRegistration-input\">\n              <input\n                className=\"proposalRegistration-inputTxt\"\n                name=\"proposal\"\n                type=\"text\"\n                id=\"proposal\"\n                placeholder=\"Enter proposal\"\n                disabled={currentProposal.registered}\n                value={currentProposal.proposal}\n                onChange={(e) => handleChange(e, index)}\n              ></input>\n              {currentProposal.proposal.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"registerProposal-button\"\n                  disabled={currentProposal.registered}\n                  onClick={() => handleRegisterProposals(index)}\n                >\n                  <span>Register proposal to smart contract</span>\n                </button>\n              )}\n            </div>\n            {proposalList.length - 1 === index && proposalList.length < 100 && (\n              <button\n                type=\"button\"\n                className=\"addProposal-button\"\n                onClick={handleAddProposal}\n              >\n                <span>Create a new proposal</span>\n              </button>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ProposalRegistration;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./ProposalItem.css\";\n\nfunction ProposalItem({\n  id,\n  hasVoted,\n  handleHasVotedCheck,\n  proposalIdVotedFor,\n  showEvent,\n}) {\n  const {\n    state: { accounts, contract },\n  } = useEth();\n\n  const [data, setData] = useState();\n  const [voteId, setVoteId] = useState(proposalIdVotedFor);\n\n  useEffect(() => {\n    if (contract) {\n      retrievePropName(id);\n      setVoteId(proposalIdVotedFor);\n    }\n  }, [contract, accounts, proposalIdVotedFor]);\n\n  const retrievePropName = async (idProp) => {\n    const proposal = await contract.methods\n      .getOneProposal(idProp)\n      .call({ from: accounts[0] });\n    if (proposal) {\n      //   setProposalList([proposal, ...proposalList]);\n      setData({\n        description: proposal.description,\n        voteCount: proposal.voteCount,\n      });\n      //   console.log(id);\n      //   const list = [...proposalList, { id: data.id }];\n      //   console.log(list.length);\n      //   setProposalList(list);\n    } \n  };\n\n  const handleVote = async () => {\n    const transac = await contract.methods\n      .setVote(id)\n      .send({ from: accounts[0] });\n    handleHasVotedCheck(true);\n    setVoteId(id);\n    showEvent(\n      \"Vote register  : \" +\n        transac.events.Voted.returnValues.voter +\n        \" for prop id \" +\n        transac.events.Voted.returnValues.proposalId\n    );\n  };\n\n\n  return (\n    <div key={id} className=\"proposalItem-container\">\n      <h2>{data && data.description}</h2>\n      <p>Number of vote : {data && data.voteCount}</p>\n      {voteId == id && <p> You voted for this prop</p>}\n      {voteId != id && (\n        <button\n          className=\"proposalItem-button\"\n          disabled={hasVoted}\n          onClick={handleVote}\n        >\n          Vote\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default ProposalItem;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport ProposalItem from \"../ProposalItem/ProposalItem\";\nimport \"./ProposalList.css\";\n\nfunction ProposalList({\n  hasVoted,\n  handleHasVotedCheck,\n  proposalIdVotedFor,\n  showEvent,\n}) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n\n  const [pastEvents, setPastEvents] = useState([]);\n  let loading = false;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await getProposalList();\n      loading = false;\n    };\n\n    if (contract && !loading) {\n      fetchData();\n    }\n  }, [contract, accounts, proposalIdVotedFor]);\n\n  const getProposalList = async () => {\n    loading = true;\n    let optionsPast = {\n      filter: {\n        value: [],\n      },\n      fromBlock: 0,\n      toBlock: \"latest\",\n    };\n\n    await contract.getPastEvents(\n      \"ProposalRegistered\",\n      optionsPast,\n      (error, events) => {\n        setPastEvents(events);\n      }\n    );\n  };\n\n  return (\n    <div className=\"proposalList-container\">\n      <span className=\"instruction\">Please vote for the proposal you want</span>\n\n      <div className=\"proposalList-main\">\n        {pastEvents.map((event) => (\n          <div key={event.returnValues.proposalId}>\n            <ProposalItem\n              id={event.returnValues.proposalId}\n              hasVoted={hasVoted}\n              handleHasVotedCheck={handleHasVotedCheck}\n              proposalIdVotedFor={proposalIdVotedFor}\n              showEvent={showEvent}\n            ></ProposalItem>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default ProposalList;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./VoteResult.css\";\n\nfunction VoteResult() {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n\n  const [winingProposal, setWinningProposal] = useState();\n\n  useEffect(() => {\n    if (contract) {\n      getWinner();\n    }\n  }, [contract]);\n\n  const getWinner = async () => {\n    const winningProposalId = await contract.methods\n      .winningProposalId()\n      .call({ from: accounts[0] });\n    // const proposal = await contract.methods\n    //   .getOneProposal(winningProposalId)\n    //   .call({ from: accounts[0] });\n\n    setWinningProposal(winningProposalId);\n  };\n\n  return (\n    <div className=\"voterResult-container\">\n      <span className=\"voterResult-instruction\">Winner result</span>\n      <div className=\"voterResult-txt\">\n        <span className=\"voterResult-result\">\n          {winingProposal && (\n            <span>Winner is proposal with id : {winingProposal}</span>\n          )}\n        </span>\n      </div>\n    </div>\n  );\n}\nexport default VoteResult;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./VoterInfo.css\";\n\nfunction VoterInfo() {\n  const {\n    state: { accounts, contract },\n  } = useEth();\n\n  const [voter, setVoter] = useState();\n  const [address, setAddress] = useState(\"\");\n  const [addressValid, setAddressValid] = useState(false);\n  const [proposal, setProposal] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n\n  useEffect(() => {\n    setAddress(\"\");\n    setAnswer(\"\");\n  }, [accounts]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    if (value.length === 42) {\n      setAddressValid(true);\n      setAddress(value);\n    }\n  };\n\n  const checkVoterInfo = async () => {\n    try {\n      const voterInfo = await contract.methods\n        .getVoter(address)\n        .call({ from: accounts[0] });\n      if (voterInfo) {\n        setVoter(voterInfo);\n\n        if (voterInfo.hasVoted && voterInfo.votedProposalId >= 0) {\n          const proposal = await contract.methods\n            .getOneProposal(voterInfo.votedProposalId)\n            .call({ from: accounts[0] });\n          setProposal(proposal);\n          setAnswer(\n            \"Voter with address \" +\n              address +\n              \"has voted for \" +\n              proposal.description\n          );\n        } else {\n          setAnswer(\"Voter with address \" + address + \" didn't vote\");\n        }\n      }\n    } catch (err) {\n      setAnswer(\"No data for address \" + address);\n    }\n  };\n\n  return (\n    <div className=\"voterInfo-container\">\n      <span className=\"voterInfo-instruction\">Check vote by address</span>\n      <div className=\"voterInfo-main\">\n        <input\n          className=\"voterInfo-inputTxt\"\n          name=\"voterAddress\"\n          type=\"text\"\n          id=\"voterAddress\"\n          value={address}\n          onChange={(e) => handleChange(e)}\n        ></input>\n        <button\n          className=\"voterInfo-button\"\n          disabled={!addressValid}\n          onClick={checkVoterInfo}\n        >\n          Get voter result\n        </button>\n      </div>\n      <span className=\"instruction\">{answer}</span>\n    </div>\n  );\n}\n\nexport default VoterInfo;\n","import React from \"react\";\nimport VoterRegistration from \"../VoterRegistration/VoterRegistration\";\nimport ProposalRegistration from \"../ProposalRegistration/ProposalRegistration\";\nimport ProposalList from \"../ProposalList/ProposalList\"\nimport VoteResult from \"../VoteResult/VoteResult\";\nimport VoterInfo from \"../VoterInfo/VoterInfo\";\n\nfunction Home({\n  isOwner,\n  isRegister,\n  currentWorflow,\n  showEvent,\n  hasVoted,\n  handleHasVotedCheck,\n  proposalIdVotedFor,\n}) {\n  return (\n    <div>\n      {isOwner && currentWorflow == 0 && (\n        <VoterRegistration showEvent={showEvent} />\n      )}\n\n      {isRegister && currentWorflow == 1 && (\n        <ProposalRegistration showEvent={showEvent} />\n      )}\n\n      {isRegister && currentWorflow == 3 && (\n        <ProposalList\n          hasVoted={hasVoted}\n          handleHasVotedCheck={handleHasVotedCheck}\n          proposalIdVotedFor={proposalIdVotedFor}\n          showEvent={showEvent}\n        />\n      )}\n      {currentWorflow == 5 && <VoteResult />}\n      {currentWorflow == 5 && isRegister && <VoterInfo />}\n      {currentWorflow == 0 && !isOwner && (\n        <span className=\"instruction\">\n          {\" \"}\n          Addresses are currently registered. Please come back later !\n        </span>\n      )}\n      {currentWorflow > 0 && !isRegister && (\n        <span className=\"instruction\">\n          {\" \"}\n          You're are not registered to participate to this voting session.\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"./Events.css\";\n\nfunction Events({ type }) {\n  const {\n    state: { contract },\n  } = useEth();\n\n  const [workflowEvents, setWorkflowEvents] = useState([]);\n  const [proposalEvents, setProposalEvents] = useState([]);\n  const [voterEvents, setVoterEvents] = useState([]);\n  const [voteEvents, setVoteEvents] = useState([]);\n\n  let optionsPast = {\n    filter: {\n      value: [],\n    },\n    fromBlock: 0,\n    toBlock: \"latest\",\n  };\n\n  let optionsNew = {\n    filter: {\n      value: [],\n    },\n    fromBlock: \"latest\",\n  };\n\n  useEffect(() => {\n    if (contract) {\n      console.log(\"Refresh event\");\n      watchEvents();\n    }\n  }, []);\n\n  const watchEvents = () => {\n    switch (type) {\n      case \"ProposalRegistered\":\n        listenProposal();\n      case \"WorkflowStatusChange\":\n        listenWorkflowStatus();\n        listenNewWorkflowStatus();\n      case \"VoterRegistered\":\n        listenVoter();\n      case \"Vote\":\n        listenVote();\n    }\n  };\n\n  const listenProposal = async () => {\n    await contract.getPastEvents(\n      \"ProposalRegistered\",\n      optionsPast,\n      (error, oldEvents) => {\n        if (oldEvents.length > 0) {\n          oldEvents.map((e) =>\n            setProposalEvents((current) => [\n              e.returnValues.proposalId,\n              ...current,\n            ])\n          );\n        }\n      }\n    );\n    contract.events.ProposalRegistered(optionsNew).on(\"data\", (newEvent) => {\n      setProposalEvents((current) => [\n        newEvent.returnValues.proposalId,\n        ...current,\n      ]);\n    });\n  };\n\n  const listenWorkflowStatus = async () => {\n    await contract.getPastEvents(\n      \"WorkflowStatusChange\",\n      optionsPast,\n      (error, oldEvents) => {\n        if (oldEvents.length > 0) {\n          oldEvents.map((e) => {\n            console.log(\"Add past event\");\n            setWorkflowEvents((current) => [\n              e.returnValues.newStatus,\n              ...current,\n            ]);\n          });\n        }\n      }\n    );\n  };\n\n  const listenNewWorkflowStatus = () => {\n    contract.events.WorkflowStatusChange(optionsNew).on(\"data\", (newEvent) => {\n      console.log(\"Add new event\");\n      setWorkflowEvents((current) => [\n        newEvent.returnValues.newStatus,\n        ...current,\n      ]);\n    });\n  };\n\n  const listenVoter = async () => {\n    await contract.getPastEvents(\n      \"VoterRegistered\",\n      optionsPast,\n      (error, oldEvents) => {\n        if (oldEvents.length > 0) {\n          oldEvents.map((e) =>\n            setVoterEvents((current) => [\n              e.returnValues.voterAddress,\n              ...current,\n            ])\n          );\n        }\n      }\n    );\n\n    contract.events.VoterRegistered(optionsNew).on(\"data\", (newEvent) => {\n      setVoterEvents((current) => [\n        newEvent.returnValues.voterAddress,\n        ...current,\n      ]);\n    });\n  };\n\n  const listenVote = async () => {\n    await contract.getPastEvents(\"Voted\", optionsPast, (error, oldEvents) => {\n      if (oldEvents.length > 0) {\n        oldEvents.map((e) =>\n          setVoteEvents((current) => [\n            {\n              voter: e.returnValues.voter,\n              voteId: e.returnValues.proposalId,\n            },\n            ...current,\n          ])\n        );\n      }\n    });\n\n    contract.events.Voted(optionsNew).on(\"data\", (newEvent) => {\n      setVoteEvents((current) => [\n        {\n          voter: newEvent.returnValues.voter,\n          voteId: newEvent.returnValues.proposalId,\n        },\n        ...current,\n      ]);\n    });\n  };\n\n  switch (type) {\n    case \"ProposalRegistered\":\n      return (\n        <div className=\"registeredEvents-container\">\n          {proposalEvents.length > 0 &&\n            proposalEvents.map((currentEvent) => (\n              <span key={currentEvent} className=\"instruction\">\n                Proposal registered with id : {currentEvent}\n              </span>\n            ))}\n          {proposalEvents.length == 0 && (\n            <span className=\"instruction\">No events</span>\n          )}\n        </div>\n      );\n    case \"WorkflowStatusChange\":\n      return (\n        <div className=\"registeredEvents-container\">\n          {workflowEvents.length > 0 &&\n            workflowEvents.map((currentEvent) => (\n              <span key={currentEvent} className=\"instruction\">\n                Workflow updated to : {currentEvent}\n              </span>\n            ))}\n          {workflowEvents.length == 0 && (\n            <span className=\"instruction\">No events</span>\n          )}\n        </div>\n      );\n    case \"VoterRegistered\":\n      return (\n        <div className=\"registeredEvents-container\">\n          {voterEvents.length > 0 &&\n            voterEvents.map((currentEvent) => (\n              <span key={currentEvent} className=\"instruction\">\n                Voter registered with address : {currentEvent}\n              </span>\n            ))}\n          {voterEvents.length == 0 && (\n            <span className=\"instruction\">No events</span>\n          )}\n        </div>\n      );\n    case \"Vote\":\n      return (\n        <div className=\"registeredEvents-container\">\n          {voteEvents.length > 0 &&\n            voteEvents.map((currentEvent) => (\n              <span key={currentEvent.voter} className=\"instruction\">\n                Vote registered for address : {currentEvent.voter} and proposal\n                : {currentEvent.voteId}\n              </span>\n            ))}\n          {voteEvents.length == 0 && (\n            <span className=\"instruction\">No events</span>\n          )}\n        </div>\n      );\n    default:\n      return <span className=\"instruction\">No events</span>;\n  }\n}\n\nexport default Events;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./TransferOwnerShip.css\";\n\nfunction TransferOnwerShip({ handleOwnerCheck }) {\n  const {\n    state: { contract, accounts },\n  } = useEth();\n\n  const [newOwner, setNewOwner] = useState(\"\");\n  const [valid, setValid] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setNewOwner(\"\");\n    setValid(0);\n  }, [accounts]);\n\n  const handleOwnerChange = (e) => {\n    const { name, value } = e.target;\n    if (value.length === 42) {\n      setValid(1);\n    } else {\n      setValid(0);\n    }\n    setNewOwner(value);\n  };\n\n  const handleOwnerRegistration = async () => {\n    try {\n      const transact = await contract.methods\n        .transferOwnership(newOwner)\n        .send({ from: accounts[0] });\n      handleOwnerCheck(false);\n      navigate(\"/\");\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"ownerRegistration-main\">\n      <span className=\"admin-instruction\">\n        Admin please proceed with new owner registration\n      </span>\n      <div className=\"ownerRegistration-input\">\n        {newOwner.length > 0 && valid == 0 && (\n          <div className=\"ownerRegistration-alert\">\n            <p>!</p>\n          </div>\n        )}\n        <input\n          className=\"ownerRegistration-inputTxt\"\n          name=\"ownerAddress\"\n          type=\"text\"\n          id=\"ownerAddress\"\n          placeholder=\"Enter address\"\n          onChange={(e) => handleOwnerChange(e)}\n        ></input>\n\n        <button\n          type=\"button\"\n          className=\"registerOwner-button\"\n          onClick={handleOwnerRegistration}\n          disabled={!valid}\n        >\n          <span>Register new onwer</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TransferOnwerShip;\n","import { useState } from \"react\";\nimport { EthProvider } from \"./contexts/EthContext\";\nimport Account from \"./components/Account/AccoutInfo\";\nimport Worflow from \"./components/Worflow/Workflow\";\nimport EventDisplayer from \"./components/EventDisplayer/EventDisplayer\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Events from \"./components/Events/Events\";\nimport TransferOnwerShip from \"./components/TransferOwnerShip/TransferOnwerShip\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isOwner, setOwner] = useState(false);\n  const [isRegister, setRegistered] = useState(false);\n  const [hasVoted, setHasVoted] = useState(false);\n  const [proposalIdVotedFor, setProposalIfVotedFor] = useState(-1);\n  const [currentWorflow, setCurrentWorflow] = useState(0);\n  const [raisedEvent, SetRaisedEvent] = useState(\"\");\n\n  function handleOwnerCheck(owner) {\n    setOwner(owner);\n  }\n\n  function handleVoterRegisteredCheck(registered) {\n    setRegistered(registered);\n  }\n\n  function handleHasVotedCheck(voted) {\n    setHasVoted(voted);\n  }\n\n  function handleProposalIfVotedFor(propIdVotedFor) {\n    setProposalIfVotedFor(propIdVotedFor);\n  }\n\n  function handleWorkflowStatusCheck(status) {\n    setCurrentWorflow(status);\n  }\n\n  const showEvent = (raisedEvent) => {\n    SetRaisedEvent(raisedEvent);\n  };\n\n  return (\n    <BrowserRouter>\n      <EthProvider>\n        <div id=\"App\">\n          <div className=\"container\">\n            <div className=\"header\">\n              {isOwner && <Navbar></Navbar>}\n              <Account\n                handleOwnerCheck={handleOwnerCheck}\n                handleVoterRegisteredCheck={handleVoterRegisteredCheck}\n                handleHasVotedCheck={handleHasVotedCheck}\n                handleProposalIfVotedFor={handleProposalIfVotedFor}\n                handleWorkflowStatusCheck={handleWorkflowStatusCheck}\n              />\n            </div>\n            <hr />\n            <Routes>\n              <Route\n                path=\"/VotingReact/workflow\"\n                element={\n                  isOwner && (\n                    <Worflow\n                      handleWorkflowStatusCheck={handleWorkflowStatusCheck}\n                      showEvent={showEvent}\n                    />\n                  )\n                }\n              ></Route>\n              <Route\n                path=\"/VotingReact\"\n                element={\n                  <Home\n                    isOwner={isOwner}\n                    isRegister={isRegister}\n                    currentWorflow={currentWorflow}\n                    showEvent={showEvent}\n                    hasVoted={hasVoted}\n                    handleHasVotedCheck={handleHasVotedCheck}\n                    proposalIdVotedFor={proposalIdVotedFor}\n                  ></Home>\n                }\n              />\n              <Route\n                path=\"/VotingReact/event/proposal\"\n                element={\n                  isOwner && (\n                    <Events\n                      key=\"ProposalRegistered\"\n                      type=\"ProposalRegistered\"\n                    ></Events>\n                  )\n                }\n              ></Route>\n              <Route\n                path=\"/VotingReact/event/workflow\"\n                element={\n                  isOwner && (\n                    <Events\n                      key=\"WorkflowStatusChange\"\n                      type=\"WorkflowStatusChange\"\n                    ></Events>\n                  )\n                }\n              ></Route>\n              <Route\n                path=\"/VotingReact/event/voter\"\n                element={\n                  isOwner && (\n                    <Events\n                      key=\"VoterRegistered\"\n                      type=\"VoterRegistered\"\n                    ></Events>\n                  )\n                }\n              ></Route>\n              <Route\n                path=\"/VotingReact/event/vote\"\n                element={isOwner && <Events key=\"Vote\" type=\"Vote\"></Events>}\n              ></Route>\n              <Route\n                path=\"/VotingReact/transferOwner\"\n                element={\n                  isOwner && (\n                    <TransferOnwerShip\n                      handleOwnerCheck={handleOwnerCheck}\n                    ></TransferOnwerShip>\n                  )\n                }\n              ></Route>\n              <Route\n                path=\"*\"\n                element={<Navigate to=\"/VotingReact\" replace />}\n              ></Route>\n\n              <Route\n                path=\"/VotingReact/event/*\"\n                element={!isOwner && <Navigate to=\"/VotingReact\" replace />}\n              ></Route>\n            </Routes>\n            <EventDisplayer\n              raisedEvent={raisedEvent}\n              showEvent={showEvent}\n            ></EventDisplayer>\n          </div>\n        </div>\n      </EthProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}